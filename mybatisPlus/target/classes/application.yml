server:
  port: 9001
spring:
  datasource:
    #    url: jdbc:mysql://mysql-a73097c0ce3d45ce-proxy.zone-01.cn-wuhan.cecloudcs.com:3331/chou_yang?useUnicode=true&characterEncoding=utf8
    #    url: jdbc:mysql://10.194.51.10:3306/chou_yang?useUnicode=true&characterEncoding=utf8
    #    url: jdbc:mysql://172.16.10.195:3306/chou_yang?useUnicode=true&characterEncoding=utf8
#    url: jdbc:mysql://localhost:3306/chou_yang?useUnicode=true&characterEncoding=utf8
    url: jdbc:mysql://localhost:3306/chou_yang?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&allowMultiQueries=true
    driverClassName: com.mysql.cj.jdbc.Driver
    #    username: chou_yang
    #    password: Whdsj@JhhsDb88
    username: root
    #    password: Jhhs@Mysql195
    #    password: Bigdata_123
    password: hsx122096

  redis:
    host: 172.16.10.185
    port: 16379
    password: Bigdata_123
    database: 0  #数据库索引
    timeout: 30000ms #连接超时时间
    jedis: #jedis工具相关配置
      timeout: 30000
      max-idle: 10
      max-wait: -1

logging:
  level:
    com.test: debug
#mybatis-plus:
#    type-aliases-package: com.test.entity
#    mapper-locations: classpath*:mapper/*Mapper.xml
#    configuration:
#        map-underscore-to-camel-case: true

#----------------mybatis plus配置-----------------------
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔(告诉 Mapper 所对应的 XML 文件位置)
  mapper-locations: classpath*:com/test/dbhappy/**/*.xml
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.test.entity
  global-config:
    db-config:
      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: assign_uuid
      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
      field-strategy: NOT_EMPTY
      #数据库类型
      db-type: MYSQL
      # 逻辑删除配置
      # 删除前
      logic-not-delete-value: 0
      # 删除后
      logic-delete-value: 1
      # 数据库表名的前缀
      table-prefix: t_


minio:
  endpoint: 127.0.0.1
  port: 9000
  accessKey: hsx
  secretKey: hsx122096
  secure: false
  bucketName: kevin
  configDir: E:\minio

#jwt
jwt:
  secret: NDU0NTY4amhmc3NkeHp6eGNxdzIlMjFAJTIxQCUyM2ZmNQ==             # 用于生成token的密钥
  expiration: 604800000   # token有效期
  token: Authorization   # http header里token 所在的字段名







